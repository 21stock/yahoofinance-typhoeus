require 'helper'

class TestYahoofinanceTyphoeus < MiniTest::Unit::TestCase
  def test_quick_query
    assert_equal("Date,Open,High,Low,Close,Volume,Adj Close\n2009-12-15,129.46,129.86,127.94,128.49,7862600,127.92\n2009-12-14,129.65,129.98,129.60,129.93,5201300,129.35\n2009-12-11,129.01,129.77,128.71,129.68,6597200,129.10\n2009-12-10,128.13,129.47,128.09,129.34,7077800,128.76\n2009-12-09,126.70,128.39,126.11,128.39,6071900,127.82\n2009-12-08,126.97,127.35,126.16,126.80,5351400,126.24\n2009-12-07,126.88,127.53,126.59,127.04,4144400,126.47\n2009-12-04,128.40,128.90,126.00,127.25,7068500,126.68\n2009-12-03,127.60,128.47,127.25,127.55,5760000,126.98\n2009-12-02,127.32,128.39,127.16,127.21,4597900,126.64\n2009-12-01,127.29,128.39,126.85,127.94,6578600,127.37\n",
                 YahooFinance.quick_query("IBM", "2009-12-01", "2009-12-15"))
  end


  def test_parallel_query
    yf = YahooFinance.new
    refute_nil(yf)

    ibm_result = nil
    aapl_result = nil

    yf.add_query("AAPL", "2008-12-01", "2008-12-15") {|response| aapl_result = response}
    yf.add_query("IBM", "2008-10-15", "2008-10-30") {|response| ibm_result = response}

    yf.run

    assert_equal("Date,Open,High,Low,Close,Volume,Adj Close\n2008-10-30,91.01,92.40,88.90,90.69,12033800,88.03\n2008-10-29,87.74,91.00,86.25,88.20,12692000,85.61\n2008-10-28,81.40,87.61,79.52,87.28,14205900,84.72\n2008-10-27,80.27,84.50,79.01,79.66,11099100,77.32\n2008-10-24,79.27,84.31,78.82,82.07,12287300,79.66\n2008-10-23,84.09,85.89,81.00,84.35,12358000,81.87\n2008-10-22,87.00,87.59,80.80,83.60,14198100,81.15\n2008-10-21,92.22,92.46,88.57,88.86,9716400,86.25\n2008-10-20,92.21,93.31,89.33,92.51,9747100,89.79\n2008-10-17,91.75,95.91,87.71,90.78,15230700,88.11\n2008-10-16,89.38,92.00,84.35,91.52,16271300,88.83\n2008-10-15,92.77,95.29,87.71,88.29,11330800,85.70\n",
                 ibm_result)

    assert_equal("Date,Open,High,Low,Close,Volume,Adj Close\n2008-12-15,95.99,96.21,93.00,94.75,31848500,94.75\n2008-12-12,92.80,99.00,92.53,98.27,37184800,98.27\n2008-12-11,97.35,101.24,94.83,95.00,37164900,95.00\n2008-12-10,97.87,99.49,96.50,98.21,33501700,98.21\n2008-12-09,98.04,103.60,97.21,100.06,42982000,100.06\n2008-12-08,97.28,100.80,95.80,99.72,42326500,99.72\n2008-12-05,90.35,94.49,88.86,94.00,37278400,94.00\n2008-12-04,94.43,95.21,89.06,91.41,38977500,91.41\n2008-12-03,89.40,96.23,88.80,95.90,47810000,95.90\n2008-12-02,90.03,92.65,86.50,92.47,41025800,92.47\n2008-12-01,91.30,92.27,88.92,88.93,32991700,88.93\n",
                 aapl_result)

  end


  def test_invalid_symbol_quick_query
    assert_raises(SymbolNotFoundException) { YahooFinance.quick_query("NonexistentSymbol", "2009-01-01", "2009-10-10") }
  end

  def test_invalid_symbol_parallel_query
    yf = YahooFinance.new
    refute_nil(yf)

    ibm_result = nil
    nonexistent_result = nil

    yf.add_query("AAPL", "2009-12-01", "2009-12-15") {|response| aapl_result = response}
    yf.add_query("NonexistentSymbol", "2009-10-15", "2009-10-30") {|response| nonexistent_result = response}

    assert_raises(SymbolNotFoundException) { yf.run }

  end

end
